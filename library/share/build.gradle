apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        //推送配置
        manifestPlaceholders = [
                QQ_SCHEME: "tencent${rootProject.ext.QQ.AppId}"
        ]

        def QQ = "";
        rootProject.ext.QQ.each {
            item -> QQ += "put(\"${item.key}\", \"${item.value}\");";
        }
        buildConfigField "java.util.HashMap<String, Object>", "QQ",
                "new java.util.HashMap<String, Object>() {{${QQ}}}"

        def QZone = "";
        rootProject.ext.QZone.each {
            item -> QZone += "put(\"${item.key}\", \"${item.value}\");";
        }
        buildConfigField "java.util.HashMap<String, Object>", "QZone",
                "new java.util.HashMap<String, Object>() {{${QZone}}}"

        def Wechat = "";
        rootProject.ext.Wechat.each {
            item -> Wechat += "put(\"${item.key}\", \"${item.value}\");";
        }
        buildConfigField "java.util.HashMap<String, Object>", "Wechat",
                "new java.util.HashMap<String, Object>() {{${Wechat}}}"

        def WechatMoments = "";
        rootProject.ext.WechatMoments.each {
            item -> WechatMoments += "put(\"${item.key}\", \"${item.value}\");";
        }
        buildConfigField "java.util.HashMap<String, Object>", "WechatMoments",
                "new java.util.HashMap<String, Object>() {{${WechatMoments}}}"

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
}
